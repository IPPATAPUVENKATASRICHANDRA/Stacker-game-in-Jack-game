

class StackerGame {
  field int level;
  field MovingRow mover;
  field Stack stack;
  field boolean play;
  field int lives;



  constructor StackerGame new() {
    let level = 0;
    let lives = initlif();
    let mover = MovingRow.new();
    let stack = Stack.new();
    let play = true;
    return this;
  }

  method void run() {
    var char key;
    var int blocks;
    var String levelStr;
    let levelStr = String.new(2);
    do Drawer.grid();
    do Output.moveCursor(21, 26);
    do Output.printString("S T A C K E R");

    while (play) {
      do levelStr.setInt(level + 1);
      do Output.moveCursor(1, 1);
      do Output.printString("Level ");
      do Output.printString(levelStr);
      do Output.printString("/");
      do Output.printInt(Constants.LEVELS());
      do Output.println();
      if (1 = MovingRow.getdiff()){
	do Output.printString("Difficulty : easy :)");
      }

      if (2 = MovingRow.getdiff()){
	do Output.printString("Difficulty : Medium :|");
      }

      if (3 = MovingRow.getdiff()){
	do Output.printString("Difficulty : Hard ToT");
      }
      do Output.moveCursor(1,50);
      do Output.printInt(updlif(blocks));
      while (~(key = Constants.KEY_SPACE())) {
        let key = Keyboard.keyPressed();
        do mover.move();
        do Drawer.row(mover.getRow(), level);
      }

      while (key = Constants.KEY_SPACE()) {
        let blocks = stack.add(mover.getRow(), level);
        do Drawer.row(stack.getRow(level), level);
        do gameState(blocks);
        let key = 0;
        do Sys.wait(1000);
      }
    }
    return;
  }

  method int updlif(int blocks){
     if (0 = blocks){
       let lives = lives - 1;
     }
     return lives;
  }

  method int initlif(){
    let lives = 3 - MovingRow.getdiff();
    return lives;
  }

  method void gameState(int blocks) {
    if (blocks = 0) {
      if (updlif(blocks) = 0 | updlif(blocks) < 0){
      	let play = false;
      	do Output.moveCursor(3, 1);
      	do Output.printString("You lost");
      	do Output.moveCursor(4,1);
      	do Output.printString("Score:");
      	do Output.printInt(MovingRow.getscr());
      	do Sys.wait(2000);
      }
    } else {
      if (level = 14) {
        let play = false;
        do Output.moveCursor(3, 1);
        do Output.printString("You win!");
        do Sys.wait(2000);
      } else {
        let play = true;
        let level = level + 1;
        do mover.setLevel(level, blocks);
      }
    }
    return;
  }

  method void dispose() {
    do mover.dispose();
    do stack.dispose();
    do Memory.deAlloc(this);
    return;
  }
}
